apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ template "mongodb.fullname" . }}
  labels:
    app: {{ template "mongodb.fullname" . }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
spec:
  template:
    metadata:
      labels:
        app: {{ template "mongodb.fullname" . }}
    spec:
      containers:
      - name: {{ template "mongodb.fullname" . }}
        image: "{{ .Values.image.variables.mongoImage.value }}"
        imagePullPolicy: {{ default "" .Values.image.variables.policyType.value | quote }}
        env:
        - name: MONGODB_ROOT_PASSWORD
          value: {{ default "" .Values.dupi.variables.rootPassword.value | quote }}
        - name: MONGODB_USERNAME
          value: {{ default "" .Values.dupi.variables.user.value | quote }}
        - name: MONGODB_PASSWORD
          value: {{ default "" .Values.dupi.variables.password.value | quote }}
        - name: MONGODB_DATABASE
          value: {{ default "" .Values.dupi.variables.database.value | quote }}
        ports:
        - name: mongodb
          containerPort: 27017
        livenessProbe:
          exec:
            command:
            - mongo
            - --eval
            - "db.adminCommand('ping')"
          initialDelaySeconds: 30
          timeoutSeconds: 5
        readinessProbe:
          exec:
            command:
            - mongo
            - --eval
            - "db.adminCommand('ping')"
          initialDelaySeconds: 5
          timeoutSeconds: 1
        volumeMounts:
        - name: data
          mountPath: /bitnami/mongodb
        resources:
{{ toYaml .Values.resources | indent 10 }}
      volumes:
      - name: data
      {{- if .Values.persistence.enabled }}
        persistentVolumeClaim:
          claimName: {{ template "mongodb.fullname" . }}
      {{- else }}
        emptyDir: {}
      {{- end -}}
